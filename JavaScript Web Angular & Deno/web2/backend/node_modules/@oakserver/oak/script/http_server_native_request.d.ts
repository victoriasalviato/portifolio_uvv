import * as dntShim from "./_dnt.shims.js";
import type { NetAddr, ServerRequest, UpgradeWebSocketFn, UpgradeWebSocketOptions } from "./types.js";
export declare const DomResponse: typeof dntShim.Response;
export declare function isNativeRequest(r: ServerRequest): r is NativeRequest;
export interface NativeRequestInfo {
    remoteAddr?: NetAddr;
    upgradeWebSocket?: UpgradeWebSocketFn;
}
/** An internal oak abstraction for handling a Deno native request. Most users
 * of oak do not need to worry about this abstraction. */
export declare class NativeRequest implements ServerRequest {
    #private;
    constructor(request: dntShim.Request, info: NativeRequestInfo);
    get body(): ReadableStream<Uint8Array> | null;
    get headers(): dntShim.Headers;
    get method(): string;
    get remoteAddr(): string | undefined;
    get request(): dntShim.Request;
    get response(): Promise<dntShim.Response>;
    get url(): string;
    get rawUrl(): string;
    error(reason?: any): void;
    getBody(): ReadableStream<Uint8Array> | null;
    respond(response: dntShim.Response): void;
    upgrade(options?: UpgradeWebSocketOptions): WebSocket;
}
